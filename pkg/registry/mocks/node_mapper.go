// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	registry "github.com/platform-edn/courier/pkg/registry"
	mock "github.com/stretchr/testify/mock"
)

// NodeMapper is an autogenerated mock type for the NodeMapper type
type NodeMapper struct {
	mock.Mock
}

// AddNode provides a mock function with given fields: _a0
func (_m *NodeMapper) AddNode(_a0 registry.Node) {
	_m.Called(_a0)
}

// Node provides a mock function with given fields: _a0
func (_m *NodeMapper) Node(_a0 string) (registry.Node, bool) {
	ret := _m.Called(_a0)

	var r0 registry.Node
	if rf, ok := ret.Get(0).(func(string) registry.Node); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(registry.Node)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// Nodes provides a mock function with given fields:
func (_m *NodeMapper) Nodes() map[string]registry.Node {
	ret := _m.Called()

	var r0 map[string]registry.Node
	if rf, ok := ret.Get(0).(func() map[string]registry.Node); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]registry.Node)
		}
	}

	return r0
}

// RemoveNode provides a mock function with given fields: _a0
func (_m *NodeMapper) RemoveNode(_a0 string) {
	_m.Called(_a0)
}
