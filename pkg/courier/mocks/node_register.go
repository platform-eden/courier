// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	registry "github.com/platform-edn/courier/pkg/registry"

	sync "sync"
)

// NodeRegister is an autogenerated mock type for the NodeRegister type
type NodeRegister struct {
	mock.Mock
}

// EventInChannel provides a mock function with given fields:
func (_m *NodeRegister) EventInChannel() chan registry.NodeEvent {
	ret := _m.Called()

	var r0 chan registry.NodeEvent
	if rf, ok := ret.Get(0).(func() chan registry.NodeEvent); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan registry.NodeEvent)
		}
	}

	return r0
}

// RegisterNodes provides a mock function with given fields: _a0, _a1, _a2
func (_m *NodeRegister) RegisterNodes(_a0 context.Context, _a1 *sync.WaitGroup, _a2 chan error) {
	_m.Called(_a0, _a1, _a2)
}

// SubscribeToEvents provides a mock function with given fields:
func (_m *NodeRegister) SubscribeToEvents() chan registry.NodeEvent {
	ret := _m.Called()

	var r0 chan registry.NodeEvent
	if rf, ok := ret.Get(0).(func() chan registry.NodeEvent); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan registry.NodeEvent)
		}
	}

	return r0
}
