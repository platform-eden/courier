// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	messaging "github.com/platform-edn/courier/pkg/messaging"
	mock "github.com/stretchr/testify/mock"
)

// MessageServer is an autogenerated mock type for the MessageServer type
type MessageServer struct {
	mock.Mock
}

// PublishMessage provides a mock function with given fields: _a0, _a1
func (_m *MessageServer) PublishMessage(_a0 context.Context, _a1 *messaging.PublishMessageRequest) (*messaging.PublishMessageResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *messaging.PublishMessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, *messaging.PublishMessageRequest) *messaging.PublishMessageResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*messaging.PublishMessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *messaging.PublishMessageRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RequestMessage provides a mock function with given fields: _a0, _a1
func (_m *MessageServer) RequestMessage(_a0 context.Context, _a1 *messaging.RequestMessageRequest) (*messaging.RequestMessageResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *messaging.RequestMessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, *messaging.RequestMessageRequest) *messaging.RequestMessageResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*messaging.RequestMessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *messaging.RequestMessageRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ResponseMessage provides a mock function with given fields: _a0, _a1
func (_m *MessageServer) ResponseMessage(_a0 context.Context, _a1 *messaging.ResponseMessageRequest) (*messaging.ResponseMessageResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *messaging.ResponseMessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, *messaging.ResponseMessageRequest) *messaging.ResponseMessageResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*messaging.ResponseMessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *messaging.ResponseMessageRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedMessageServer provides a mock function with given fields:
func (_m *MessageServer) mustEmbedUnimplementedMessageServer() {
	_m.Called()
}
